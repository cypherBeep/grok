{"id":555747396,"lang":"java","time":"5Â months","timestamp":1631769434,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/555747396/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"41.2 MB","code":"class Solution {\n    public int subarraySum(int[] nums, int k) {\n        int count = 0;\n        int sum = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, 1); // Sum 0 occurence 1\n        for(int i = 0; i < nums.length; i++){\n            sum += nums[i];\n            if(map.containsKey(sum - k)) count += map.get(sum-k);\n            map.put(sum, map.getOrDefault(sum, 0)+1);\n        }\n        return count;\n        // Variable Sliding Window but works only for positive numbers.\n        // while(end < nums.length){\n        //     sum += nums[end];\n        //     if(sum < k) end++;\n        //     if(sum > k){\n        //         while(sum > k){\n        //             sum -= nums[start];\n        //             start++;\n        //         }\n        //     }\n        //     if(sum == k) {\n        //         count++;\n        //         end++;\n        //     }\n        // }\n        // return count;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k"}