{"id":555362388,"lang":"java","time":"5Â months","timestamp":1631713504,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555362388/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"N/A","code":"class Solution {\n    public void solve(char[][] board) {\n        int valid = 0;\n        for(int i = 0; i < board.length; i++){\n            for(int j = 0; j < board[0].length; j++){\n                if(board[i][j] == 'X') valid++;\n            }\n        }\n        if(valid == 0) return;\n        for(int i = 1; i < board.length; i++){\n            for(int j = 1; j < board[0].length; j++){\n                if(board[i][j] == 'O'){\n                    dfs(board, i, j);\n                }\n            }\n        }\n    }\n    public void dfs(char[][] board, int x, int y){\n        if(isSafe(x, y, board)){\n            board[x][y] = 'X';\n            dfs(board, x+1, y);\n            dfs(board, x-1, y);\n            dfs(board, x, y+1);\n            dfs(board, x, y-1);\n        } else{\n            return;\n        }\n    }\n    public boolean isSafe(int x, int y, char[][] board){\n        return (x>0 && y>0) && (x < board.length-1 && y < board[0].length-1) && (board[x][y] == 'O');\n    }\n}","compare_result":"1111111110111101110100100000000010110101000001000000100001","title_slug":"surrounded-regions"}