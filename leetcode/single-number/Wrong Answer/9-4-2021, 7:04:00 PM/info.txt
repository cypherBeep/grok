{"id":549336828,"lang":"java","time":"5 months, 2 weeks","timestamp":1630762440,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/549336828/","is_pending":"Not Pending","title":"Single Number","memory":"N/A","code":"class Solution {\n    public int singleNumber(int[] nums) {\n        // For positive ints\n        // HashSet<Integer> set = new HashSet<Integer>();\n        // int[] index = new int[nums.length];\n        // for(int i = 0; i < nums.length; i++){\n        //     if(set.contains(nums[i])) index[i]++;\n        //     else set.add(nums[i]);\n        // }\n        // int res = 0;\n        // for(int i = 0; i < index.length; i++){\n        //     if(index[i] == 1) res = i;\n        // }\n        if(nums.length == 1) return nums[0];\n        HashMap<Integer, Integer> set = new HashMap<Integer, Integer>();\n        for(int i = 0; i < nums.length; i++){\n            if(set.containsValue(nums[i])) set.put(2,nums[i]);\n            else set.put(1,nums[i]);\n        }\n        int res = set.get(1);\n        return res;\n    }\n}","compare_result":"1011100001111111111111111111111111111111111111111111000000000","title_slug":"single-number"}