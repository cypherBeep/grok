{"id":551465812,"lang":"java","time":"5 months, 1 week","timestamp":1631103216,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/551465812/","is_pending":"Not Pending","title":"3Sum","memory":"56 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> res = new ArrayList<>();\n        for(int i = 0; i < nums.length && nums[i] <= 0; ++i){\n            if(i == 0 || nums[i-1] != nums[i]){\n                twoSumII(nums,i,res);\n            }\n        }\n        return res;\n    }\n    public void twoSumII(int[] nums, int i, List<List<Integer>> res){\n        int lo = i + 1, hi = nums.length - 1;\n        while (lo < hi) {\n            int sum = nums[i] + nums[lo] + nums[hi];\n            if (sum < 0) {\n                ++lo;\n            } else if (sum > 0) {\n                --hi;\n            } else {\n                res.add(Arrays.asList(nums[i], nums[lo++], nums[hi--]));\n                while (lo < hi && nums[lo] == nums[lo - 1])\n                    lo++;\n            }\n    }\n}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}