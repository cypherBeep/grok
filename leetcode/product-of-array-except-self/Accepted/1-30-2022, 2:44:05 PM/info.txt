{"id":630828129,"lang":"java","time":"2 weeks, 4 days","timestamp":1643534045,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/630828129/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"57.6 MB","code":"class Solution {\n    public int[] productExceptSelf(int[] nums) {\n\n        // The length of the input array\n        int length = nums.length;\n\n        // The left and right arrays as described in the algorithm\n        int[] L = new int[length];\n        int[] R = new int[length];\n\n        // Final answer array to be returned\n        int[] answer = new int[length];\n\n        // L[i] contains the product of all the elements to the left\n        // Note: for the element at index '0', there are no elements to the left,\n        // so L[0] would be 1\n        L[0] = 1;\n        for (int i = 1; i < length; i++) {\n\n            // L[i - 1] already contains the product of elements to the left of 'i - 1'\n            // Simply multiplying it with nums[i - 1] would give the product of all\n            // elements to the left of index 'i'\n            L[i] = nums[i - 1] * L[i - 1];\n        }\n\n        // R[i] contains the product of all the elements to the right\n        // Note: for the element at index 'length - 1', there are no elements to the right,\n        // so the R[length - 1] would be 1\n        R[length - 1] = 1;\n        for (int i = length - 2; i >= 0; i--) {\n\n            // R[i + 1] already contains the product of elements to the right of 'i + 1'\n            // Simply multiplying it with nums[i + 1] would give the product of all\n            // elements to the right of index 'i'\n            R[i] = nums[i + 1] * R[i + 1];\n        }\n\n        // Constructing the answer array\n        for (int i = 0; i < length; i++) {\n            // For the first element, R[i] would be product except self\n            // For the last element of the array, product except self would be L[i]\n            // Else, multiple product of all elements to the left and to the right\n            answer[i] = L[i] * R[i];\n        }\n\n        return answer;\n    }\n}","compare_result":"11111111111111111111","title_slug":"product-of-array-except-self"}