{"id":627213362,"lang":"java","time":"3 weeks, 2 days","timestamp":1643081342,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/627213362/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n        if(nums.length == 1) return nums[0];\n        int mx = nums[0];\n        int sum = nums[0];\n        int counter = 0;\n        while(counter < nums.length){\n            sum = Math.max(nums[counter], sum+nums[counter]);\n            mx = Math.max(mx, sum);\n            counter++;\n        }\n        return mx;\n    }\n}","compare_result":"11011111100111000010110011011000110110111111111110110110010101101101101100110001110110111011101110110001011010011101110101111011100011010111110101101101011001011010001000111000111011110110011110101111111111101","title_slug":"maximum-subarray"}