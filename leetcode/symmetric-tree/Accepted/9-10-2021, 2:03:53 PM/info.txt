{"id":552511100,"lang":"java","time":"5 months, 1 week","timestamp":1631262833,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/552511100/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"36.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        if(root == null) return false;\n        if(root.left == null && root.right == null)  return true;\n        return isMirror(root, root);\n    }\n    public boolean isMirror(TreeNode t1, TreeNode t2){\n        if (t1 == null && t2 == null) return true;\n        if (t1 == null || t2 == null) return false;\n        return (t1.val == t2.val)\n            && isMirror(t1.right, t2.left)\n            && isMirror(t1.left, t2.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}