{"id":552504203,"lang":"java","time":"5 months, 1 week","timestamp":1631261489,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/552504203/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        if(root == null) return false;\n        if(root.left == null && root.right == null)  return true;\n        if(root.left == root.right) return true;\n        if(root.left != root.right) return false;\n        return isSymmetric(root.left) && isSymmetric(root.right);\n    }\n}","compare_result":"01111111010101111101101010101100011001111011110111111111101101111011000110110001111111110100111101111001011011011110110101111000100111001011110100001110011010110001100010011111001111001100110101111","title_slug":"symmetric-tree"}