{"id":551972607,"lang":"java","time":"5 months, 1 week","timestamp":1631175658,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/551972607/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"38.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> preorderTraversal(TreeNode root) {\n         ArrayList<Integer> out = new ArrayList<Integer>();\n        preorder(root, out);\n        return out;\n    }\n    public static void preorder(TreeNode root, List<Integer> out){\n        if(root == null) return;\n        out.add(root.val);\n        preorder(root.left, out);\n        preorder(root.right, out);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}