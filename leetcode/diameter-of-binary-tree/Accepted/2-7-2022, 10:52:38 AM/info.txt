{"id":636215724,"lang":"java","time":"1 week, 3 days","timestamp":1644211358,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/636215724/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"43.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private static int diameter;\n    public int diameterOfBinaryTree(TreeNode root) {\n        diameter = 0;\n        longestPath(root);\n        return diameter;\n    }\n    private static int longestPath(TreeNode node){\n        if(node == null) \n            return 0;\n        int leftPath = longestPath(node.left);\n        int rightPath = longestPath(node.right);\n        diameter = Math.max(diameter, leftPath+rightPath);\n        return Math.max(leftPath, rightPath) + 1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}