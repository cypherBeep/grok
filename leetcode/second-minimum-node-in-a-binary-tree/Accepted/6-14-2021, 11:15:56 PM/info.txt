{"id":507894030,"lang":"java","time":"8 months, 1 week","timestamp":1623692756,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/507894030/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"36.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findSecondMinimumValue(TreeNode root) {\n        Set<Integer> set = new TreeSet<Integer>();\n        traversal(root, set);\n        if(set.size() == 1)//if set has only oe elememt, return false\n            return -1;\n        System.out.print(set);\n       Iterator<Integer> itr = set.iterator();\n        itr.next();//move to next element\n        return itr.next();\n        \n    }\n    private void traversal(TreeNode root, Set<Integer> set){\n        if(root != null){\n            set.add(root.val);\n            traversal(root.left, set);\n            traversal(root.right, set);            \n\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree"}