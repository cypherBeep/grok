{"id":507879932,"lang":"java","time":"8 months, 1 week","timestamp":1623690766,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/507879932/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findMinimumValue(TreeNode current){\n        while(current.left != null){\n            current = current.left;\n        }\n        return current.val;\n    }\n    public int findSecondMinimumValue(TreeNode root) {\n        while(true){\n            if(root.left == null && root.right != null){\n              findMinimumValue(root.right);\n            }\n            if(root.left != null && root.left.left == null && root.left.right == null && root.val != root.left.val){\n                return root.val;\n            }\n            if(root.left != null && root.left.left == null && root.left.right == null && root.val == root.left.val){\n                findMinimumValue(root.right);\n            }\n            \n        }\n    }\n}","compare_result":"000000000000000000000000000000000000000","title_slug":"second-minimum-node-in-a-binary-tree"}