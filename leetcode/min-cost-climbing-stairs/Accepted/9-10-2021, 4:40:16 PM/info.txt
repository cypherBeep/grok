{"id":552554361,"lang":"java","time":"5 months, 1 week","timestamp":1631272216,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/552554361/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"40.6 MB","code":"class Solution {\n    static int minSum = 0;\n    public int minCostClimbingStairs(int[] cost) {\n        int[] dp = new int[cost.length+1];\n        return minCost(cost.length, cost, dp);\n    }\n    public int minCost(int i, int[] cost, int[] dp){ //minimumCost(i) will represent the minimum cost to                                    // reach the ith step.\n        if(i == 0 || i == 1) return dp[i] = 0; //since we are allowed to start on either step 0 or step 1\n        if(dp[i] != 0) return dp[i];\n        return dp[i] = Math.min(minCost(i-1,cost,dp)+cost[i-1],minCost(i-2,cost,dp)+cost[i-2]);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs"}