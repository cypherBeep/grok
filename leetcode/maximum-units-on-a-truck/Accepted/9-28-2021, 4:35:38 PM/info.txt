{"id":562346368,"lang":"java","time":"4 months, 3 weeks","timestamp":1632827138,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/562346368/","is_pending":"Not Pending","title":"Maximum Units on a Truck","memory":"39.2 MB","code":"class Solution {\n    public int maximumUnits(int[][] boxTypes, int truckSize) {\n    //     int unitCount = 0;\n    //     int remainingSize = truckSize;\n    //     while(remainingSize > 0){\n    //         int maxUnitBoxIndex = maxUnitBox(boxTypes);\n    //         if(maxUnitBoxIndex == -1) break;\n    //         int boxCount = Math.min(remainingSize, boxTypes[maxUnitBoxIndex][0]);\n    //         unitCount += boxCount*boxTypes[maxUnitBoxIndex][1];\n    //         remainingSize -= boxCount;\n    //         boxTypes[maxUnitBoxIndex][1] = -1;\n    //     }\n    //     return unitCount;\n    // }\n    // public int maxUnitBox(int[][] boxTypes){\n    //     int max = -1;\n    //     int maxUnit = 0;\n    //     for(int i = 0; i < boxTypes.length; i++){\n    //         if(boxTypes[i][1] > maxUnit){\n    //             maxUnit = boxTypes[i][1];\n    //             max = i;\n    //         }\n    //     }\n    //     return max;\n        \n        Arrays.sort(boxTypes, (a, b) -> b[1] - a[1]);\n        int remSize = truckSize;\n        int sum = 0;\n        for(int[] a: boxTypes){\n            int boxCount = Math.min(remSize, a[0]);\n            sum += boxCount*a[1];\n            remSize -= boxCount;\n            if(remSize == 0) break;\n        }\n        return sum;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-units-on-a-truck"}