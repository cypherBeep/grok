{"id":550901603,"lang":"java","time":"5 months, 1 week","timestamp":1631012423,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/550901603/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        HashSet<ListNode> set = new HashSet<ListNode>();\n        if(head == null) return false;\n        if(head.next == null) return false;\n        ListNode current = head;\n        while(current != null){\n            if(set.contains(current)) return true;\n            else set.add(current);\n        }\n        return false;\n    }\n}","compare_result":"11111101110111011000","title_slug":"linked-list-cycle"}