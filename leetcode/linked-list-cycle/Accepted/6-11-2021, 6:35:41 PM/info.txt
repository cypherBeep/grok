{"id":506379584,"lang":"java","time":"8 months, 1 week","timestamp":1623416741,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/506379584/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"39.4 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n      public boolean hasCycle(ListNode head) {\n        if (head == null) return false;\n        ListNode curr = head;\n        Set<ListNode> visited = new HashSet<>(); \n        while (curr != null) {\n            if (visited.contains(curr)) return true;\n            visited.add(curr);\n            curr = curr.next;\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111","title_slug":"linked-list-cycle"}