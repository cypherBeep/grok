{"id":554302175,"lang":"java","time":"5 months, 1 week","timestamp":1631553269,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/554302175/","is_pending":"Not Pending","title":"Partition List","memory":"39.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode partition(ListNode head, int x) {\n        ListNode dummy1 = new ListNode(0);\n        ListNode dummy2 = new ListNode(0);\n        ListNode smallP = dummy1;\n        ListNode greaterP = dummy2; \n        while(head != null){\n            if(head.val < x) {\n                smallP.next = head;\n                smallP = smallP.next;\n            } else if(head.val >= x) {\n                greaterP.next = head;\n                greaterP = greaterP.next;\n            }\n            head = head.next;\n        }\n        greaterP.next = null;\n        smallP.next = dummy2.next;\n        return dummy1.next;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list"}