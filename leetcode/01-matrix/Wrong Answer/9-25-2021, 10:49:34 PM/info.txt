{"id":560827095,"lang":"java","time":"4 months, 3 weeks","timestamp":1632590374,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/560827095/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\n    public int[][] updateMatrix(int[][] mat) {\n        int[][] dist = new int[mat.length][mat[0].length];\n        int n = mat.length;\n        int m = mat[0].length;\n        \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                dist[i][j] = Integer.MAX_VALUE;\n            }\n        }\n        // top and left\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(mat[i][j] == 0) dist[i][j] = 0;\n                else {\n                    if(i > 0) {\n                        dist[i][j] = Math.min(dist[i][j], dist[i-1][j]+1);\n                    }\n                    if(j > 0) {\n                        dist[i][j] = Math.min(dist[i][j], dist[i][j-1]+1);\n                    }\n                }\n            }\n        }\n        // bottom and right\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < m; j++){\n                if(mat[i][j] == 0) dist[i][j] = 0;\n                else {\n                    if(i > 0 && i < n-1) {\n                        dist[i][j] = Math.min(dist[i][j], dist[i+1][j]+1);\n                    }\n                    if(j > 0 && j < m-1) {\n                        dist[i][j] = Math.min(dist[i][j], dist[i][j+1]+1);\n                    }\n                }\n            }\n        }\n        return dist;\n    }\n}\n\n// Brute force\n// int[][] dist = new int[mat.length][mat[0].length];\n//         int n = mat.length;\n//         int m = mat[0].length;\n        \n//         for(int i = 0; i < n; i++){\n//             for(int j = 0; j < m; j++){\n//                 dist[i][j] = Integer.MAX_VALUE;\n//             }\n//         }\n//         for(int i = 0; i < n; i++){\n//             for(int j = 0; j < m; j++){\n//                 if(mat[i][j] == 0) dist[i][j] = 0;\n//                 else if(mat[i][j] == 1) {\n//                     for(int k = 0; k < n; k++){\n//                         for(int l = 0; l < m; l++){\n//                            if(dist[k][l] == 0) {\n//                                 int curDist = Math.abs(k-i) + Math.abs(l-j);\n//                                dist[i][j] = Math.min(dist[i][j], curDist);\n//                            }\n//                          }\n//                     }\n//                 }\n//             }\n//         }\n//         return dist;","compare_result":"11111110000000000000000000000000000000000101000000","title_slug":"01-matrix"}