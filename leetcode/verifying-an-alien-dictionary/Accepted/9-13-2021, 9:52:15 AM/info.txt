{"id":554013641,"lang":"java","time":"5 months, 1 week","timestamp":1631506935,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/554013641/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"39.2 MB","code":"class Solution {\n    public boolean isAlienSorted(String[] words, String order) {\n        int[] dict = new int[26];\n        for (int i = 0; i < order.length(); i++){\n            dict[order.charAt(i)-'a'] = i;\n        }\n        for(int i = 0; i < words.length - 1; i++){\n            for(int start = 0; start < words[i].length(); start++){\n                if(start >= words[i+1].length()) return false;\n                if(words[i].charAt(start) != words[i+1].charAt(start)){\n                    int cur = words[i].charAt(start)-'a';\n                    int next = words[i+1].charAt(start)-'a';\n                    if(dict[cur] > dict[next]) return false;\n                    else break;\n                }                \n            }\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary"}