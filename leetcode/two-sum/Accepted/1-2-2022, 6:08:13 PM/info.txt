{"id":611434090,"lang":"rust","time":"1 month, 2 weeks","timestamp":1641127093,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/611434090/","is_pending":"Not Pending","title":"Two Sum","memory":"2.6 MB","code":"use std::collections::HashMap;\nimpl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        let mut map = HashMap::with_capacity(nums.len());\n        for (index, num) in nums.iter().enumerate() {\n            match map.get(&(target - num)) {\n                None => {\n                    map.insert(num, index);\n                }\n                Some(sub_index) => return vec![*sub_index as i32, index as i32],\n            }\n        }\n        vec![]\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum"}