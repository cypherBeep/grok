{"id":563816664,"lang":"java","time":"4 months, 2 weeks","timestamp":1633061777,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/563816664/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"39.5 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        int mxProduct = nums[0];\n        int minProduct = nums[0]; // to handle -ve values\n        int result = mxProduct;\n        for(int i = 1; i < nums.length; i++){\n            int cur = nums[i];\n            int mx = Math.max(cur, Math.max(mxProduct*cur, minProduct*cur));\n            minProduct = Math.min(cur, Math.min(mxProduct*cur, minProduct*cur));\n            mxProduct = mx;\n            result = Math.max(result, mxProduct);\n        }\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}