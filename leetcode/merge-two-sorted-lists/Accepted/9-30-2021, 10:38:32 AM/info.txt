{"id":563318425,"lang":"java","time":"4 months, 2 weeks","timestamp":1632978512,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/563318425/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"38.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        if(l1 == null) return l2;\n        if(l2 == null) return l1;\n        \n        ListNode list = new ListNode(0);\n        ListNode prev = list;\n        \n        while(l1 != null && l2 != null){\n            if(l1.val < l2.val) {\n                prev.next = new ListNode(l1.val);\n                l1 = l1.next;\n            } else {\n                prev.next = new ListNode(l2.val);\n                l2 = l2.next;\n            }\n            prev = prev.next;\n        }\n        \n        prev.next = l1 == null ? l2 : l1;\n        \n        return list.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}