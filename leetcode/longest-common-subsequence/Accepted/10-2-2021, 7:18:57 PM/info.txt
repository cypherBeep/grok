{"id":564490995,"lang":"java","time":"4 months, 2 weeks","timestamp":1633182537,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/564490995/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"120.3 MB","code":"class Solution {\n    public int longestCommonSubsequence(String s1, String s2) {\n        int m = s1.length();\n        int n = s2.length();\n        int[][] dp = new int[1001][1001];\n        return lcs(s1, s2, m, n, dp);\n    }\n    public int lcs(String s1, String s2, int m, int n, int[][] dp){\n        if(m == 0 || n == 0) return 0;\n        if(dp[m][n] != 0) return dp[m][n];\n        if(s1.charAt(m-1) == s2.charAt(n-1)) return dp[m][n] = 1 + lcs(s1, s2, m-1, n-1, dp);\n        return dp[m][n] = Math.max(lcs(s1, s2, m-1, n, dp) , lcs(s1, s2, m, n-1, dp));\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence"}