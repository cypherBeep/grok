{"id":563376091,"lang":"java","time":"4 months, 2 weeks","timestamp":1632986542,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/563376091/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"40.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        List<Integer> list = new ArrayList<Integer>();\n        for(ListNode l: lists){\n            while(l != null){\n                list.add(l.val);\n                l = l.next;\n            }\n        }\n        Collections.sort(list);\n        \n        ListNode head = new ListNode(0);\n        ListNode dummy = head;\n        \n        for(int i: list){\n            dummy.next = new ListNode(i);\n            dummy = dummy.next;\n        }\n        return head.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}