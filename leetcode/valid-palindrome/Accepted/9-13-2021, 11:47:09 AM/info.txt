{"id":554061330,"lang":"java","time":"5 months, 1 week","timestamp":1631513829,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/554061330/","is_pending":"Not Pending","title":"Valid Palindrome","memory":"38.9 MB","code":"class Solution {\n  public boolean isPalindrome(String s) {\n    StringBuilder builder = new StringBuilder();\n\n    for (char ch : s.toCharArray()) {\n      if (Character.isLetterOrDigit(ch)) {\n        builder.append(Character.toLowerCase(ch));\n      }\n    }\n\n    String filteredString = builder.toString();\n    String reversedString = builder.reverse().toString();\n\n    return filteredString.equals(reversedString);\n  }\n\n  /** An alternate solution using Java 8 Streams */\n  public boolean isPalindromeUsingStreams(String s) {\n    StringBuilder builder = new StringBuilder();\n\n    s.chars()\n        .filter(c -> Character.isLetterOrDigit(c))\n        .mapToObj(c -> Character.toLowerCase((char) c))\n        .forEach(builder::append);\n\n    return builder.toString().equals(builder.reverse().toString());\n  }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome"}