{"id":547631820,"lang":"java","time":"5 months, 2 weeks","timestamp":1630473916,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/547631820/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"39.7 MB","code":"class Solution {\n    public boolean canPartition(int[] nums) {\n         int sum = 0;\n        for(int i: nums){\n            sum += i;\n        }\n        if(sum%2 != 0) return false;\n        int num = sum/2;\n        boolean[][] dp = new boolean[nums.length+1][num+1];\n        for(int i=0; i<=nums.length;i++){\n            dp[i][0] = true;\n        }\n        for(int j=1; j<=num; j++){\n            dp[0][j] = false;\n        }\n        for(int i=1; i<=nums.length; i++){\n            for(int j=1; j<=num; j++){\n                if(j-nums[i-1] >= 0)\n                    dp[i][j] = dp[i-1][j] || dp[i-1][j-nums[i-1]];\n                else \n                    dp[i][j] = dp[i-1][j];\n            }\n        }\n        return dp[nums.length][num];\n    }\n    }\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}