{"id":550916308,"lang":"java","time":"5 months, 1 week","timestamp":1631015465,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/550916308/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        if(root == null) return 0;\n        int cL = 0;\n        int cR = 0;\n        TreeNode current = root.left;\n        while(current != null){\n            cL++;\n            current = current.left;\n        }\n        current = root.right;\n        while(current != null){\n            cR++;\n            current = current.right;\n        }\n        return Math.max(cL+1,cR+1);\n    }\n}","compare_result":"111111111111100000100000000110000000010","title_slug":"maximum-depth-of-binary-tree"}