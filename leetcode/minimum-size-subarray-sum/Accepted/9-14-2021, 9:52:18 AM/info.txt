{"id":554580584,"lang":"java","time":"5Â months","timestamp":1631593338,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/554580584/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"38.8 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        if(nums == null || nums.length == 0) return 0;\n        int ws = 0;\n        int we = 0;\n        int sum = 0;\n        int ans = Integer.MAX_VALUE;\n        for(we = 0; we < nums.length; we++){\n            sum += nums[we];\n            while(sum >= target){\n                ans = Math.min(ans, we+1-ws); // min length window\n                sum -= nums[ws++]; // move start of window\n            }\n        }\n        return ans != Integer.MAX_VALUE ? ans : 0;\n    }\n}","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum"}