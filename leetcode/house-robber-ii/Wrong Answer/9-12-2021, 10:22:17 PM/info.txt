{"id":553729732,"lang":"java","time":"5 months, 1 week","timestamp":1631465537,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/553729732/","is_pending":"Not Pending","title":"House Robber II","memory":"N/A","code":"class Solution {\n    public int rob(int[] nums) {\n        if(nums.length == 0) return 0;\n        if(nums.length == 1) return nums[0];\n        int[] a1 = Arrays.copyOfRange(nums, 0, nums.length-1);\n        int[] a2 = Arrays.copyOfRange(nums, 1, nums.length);\n        return Math.max(robFrom(a1), robFrom(a2));\n    }\n    public int robFrom(int[] nums){\n        if(nums.length == 0) return 0;\n        if(nums.length == 1) return nums[0];\n        \n        int[] dp = new int[nums.length];\n        dp[0] = nums[0];\n        dp[1] = Math.max(nums[0], nums[1]);\n        for(int i = 2; i < nums.length; i++){\n            dp[i] = Math.max(dp[i], nums[i] + dp[i-2]);\n        }\n        return dp[dp.length - 1];\n    }\n}","compare_result":"111111111111111011111111111111101111111101101111111100001000100000000000001","title_slug":"house-robber-ii"}