{"id":547134034,"lang":"java","time":"5 months, 2 weeks","timestamp":1630396774,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/547134034/","is_pending":"Not Pending","title":"Merge Intervals","memory":"44 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        Arrays.sort(intervals, (a,b) -> Integer.compare(a[0],b[0]));\n        LinkedList<int[]> merged = new LinkedList<int[]>();\n        for(int[] interval: intervals){\n            if(merged.isEmpty() || merged.getLast()[1] < interval[0]){\n                merged.add(interval);\n            } else {\n                merged.getLast()[1] = Math.max(merged.getLast()[1],interval[1]);\n            }\n        }\n        return merged.toArray(new int[merged.size()][]);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}