{"id":556841019,"lang":"java","time":"5Â months","timestamp":1631950052,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/556841019/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"45.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    private TreeNode lca = null;\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        findLCA(root, p, q);\n        return this.lca;\n    }\n    public int findLCA(TreeNode root, TreeNode p, TreeNode q){\n        if(root == null || this.lca != null) return 0;\n        int r = (root == p || root == q) ? 1 : 0;\n        int left = findLCA(root.left, p, q);\n        int right = findLCA(root.right, p, q);\n        if(r + left + right == 2 && this.lca == null) this.lca = root;\n        return r+left+right;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}