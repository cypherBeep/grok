{"id":552878141,"lang":"java","time":"5 months, 1 week","timestamp":1631329080,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/552878141/","is_pending":"Not Pending","title":"House Robber","memory":"N/A","code":"class Solution {\n    public int rob(int[] nums) {\n        int[] dp = new int[101];\n        return robFrom(0, nums, dp);\n    }\n    public int robFrom(int pos, int[] nums, int[] dp){ \n        // this function return the max profit we\n        // can bag from index pos to end of the array.\n    \n        if(pos >= nums.length) return dp[pos] = 0;\n        \n        if(dp[pos] != 0) return dp[pos];\n        \n        // we can either rob the current house OR\n        // we can skip it and move to next house.\n        return dp[pos] = Math.max(robFrom(pos+1,nums,dp),\n                        nums[pos]+robFrom(pos+2,nums,dp));\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111110","title_slug":"house-robber"}